// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Card that it matches an existing snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Card />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <article
          className="card__content"
>
          
</article>,
        <form
          className="card__delete"
          onSubmit={[Function]}
>
          <button
                    className="button"
                    type="submit"
          >
                    x
          </button>
</form>,
      ],
      "className": "card",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            undefined,
            undefined,
          ],
          "className": "card__content",
        },
        "ref": null,
        "rendered": Array [
          undefined,
          undefined,
        ],
        "type": "article",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="button"
            type="submit"
>
            x
</button>,
          "className": "card__delete",
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "x",
            "className": "button",
            "type": "submit",
          },
          "ref": null,
          "rendered": "x",
          "type": "button",
        },
        "type": "form",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <article
            className="card__content"
>
            
</article>,
          <form
            className="card__delete"
            onSubmit={[Function]}
>
            <button
                        className="button"
                        type="submit"
            >
                        x
            </button>
</form>,
        ],
        "className": "card",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              undefined,
              undefined,
            ],
            "className": "card__content",
          },
          "ref": null,
          "rendered": Array [
            undefined,
            undefined,
          ],
          "type": "article",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="button"
              type="submit"
>
              x
</button>,
            "className": "card__delete",
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "x",
              "className": "button",
              "type": "submit",
            },
            "ref": null,
            "rendered": "x",
            "type": "button",
          },
          "type": "form",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
